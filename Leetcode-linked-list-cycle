/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    
    
    
    
    bool hasCycle(ListNode *head) {
      if(head == NULL){
          return false;
      }
        
      else if(head->next == head){
          return true;
      }
        
      else if(head->next == NULL){
          return false;
      }  
       
      ListNode*q = head;
      vector<ListNode *> addresses;
        
      while(q->next!=NULL){
          
        for (int i = 0; i < addresses.size(); i++){  
              if (addresses[i] == q){
                 return true;
             }
        }
          
        addresses.push_back(q); 
          
          q=q->next;
          
      }
       
        
        return false;
    }
};
